{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","App","props","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","message","map","components_Note","key","find","n","changedNote","objectSpread","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","style","color","fontStyle","fontSize","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7d62745d.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content} \n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n  \n  //return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n        .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      }).catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n  \n  useEffect(() => {\n    noteService\n      .getAll()\n        .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5\n    }\n\n    noteService\n      .create(noteObject)\n        .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote('')\n      })\n  }\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  const Footer = () => {\n    const footerStyle = {\n      color: 'green',\n      fontStyle: 'italic',\n      fontSize: 16\n    }\n  \n    return (\n      <div style={footerStyle}>\n        <br />\n        <em>Note app, Department of Computer Science, University of Helsinki 2019</em>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'imporrant' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input \n          value={newNote}\n          onChange={handleNoteChange}\n          />\n        <button type=\"submit\">Save</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport React from 'react'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}